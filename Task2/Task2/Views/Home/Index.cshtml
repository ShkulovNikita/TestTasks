@using Task2.ViewModels;
@using Task2.HtmlHelpers;
@using Microsoft.AspNetCore.Http;

@model FeedViewModel;

@{
    ViewData["Title"] = "RSS-фидер";

    // сообщения со стороны сервера
    string success = null;
    if (TempData["Success"] != null)
        success = TempData["Success"].ToString();

    string error = null;
    if (TempData["Error"] != null)
        error = TempData["Error"].ToString();

    // получить частоту обновления из модели, если есть
    int updateTime = -1;
    if (Model != null)
        updateTime = Model.UpdateTime;

    // получить выбранный формат вывода описания
    bool formatted = false;
    if (Context.Session.GetString("format") == "True")
        formatted = true;
}

<div class="row">
    @if (Model != null)
    {
        <!--Блок ленты-->
        <div class="col-9">
            <!--Блок сообщений-->
            @Html.CheckError(error)
            @Html.CheckSuccess(success)

            <!--Сообщение, появляющееся во время загрузки данных из RSS-источников-->
            <div id="loading-message" class="alert alert-info"></div>

            <!--Лента-->
            <div class="rss-feed"></div>
        </div>
        <!--Блок настроек-->
        <div class="col-3">
            @using (Html.BeginForm("UpdateSettings", "Home", FormMethod.Post))
            {
                <!--Поля для ввода ссылок на RSS-ленты-->
                <label>Ленты</label>
                <div id="settings-feeds">

                    @foreach (string feed in Model.Feeds)
                    {
                        <div class="feed-field">
                            <input type="text" name="feedLink" value="@feed" class="feed-link" />
                            <button type="button" class="btn btn-danger remove-feed">-</button>
                        </div>
                    }
                    <button type="button" class="btn btn-success add-feed">Добавить ленту</button>
                </div>

                <!--Периодичность обновления лент-->
                <input type="number" name="updateTime" value="@Model.UpdateTime" />

                <!--Форматирование описаний статей по тегам-->
                <label>Вывод описания</label>
                @if (formatted)
                {
                    <input type="radio" name="format" value="false" /><span>Без форматирования</span><br />
                    <input type="radio" name="format" value="true" checked /><span>С форматированием</span><br />
                }
                else
                {
                    <input type="radio" name="format" value="false" checked /><span>Без форматирования</span><br />
                    <input type="radio" name="format" value="true" /><span>С форматированием</span><br />
                }

                <input type="submit" class="btn btn-primary" value="Сохранить" />
            }
        </div>
    }
    else
    {
        <!--Вывести ошибку, из-за которой не удалось загрузить страницу-->
        <div class="col-12">
            @Html.CheckError(error)
        </div>
    }
</div>

@section scripts {
    <script type="text/javascript">
        // действия, выполняемые сразу после загрузки страницы
        $(window).on('load', function () {
            // скрыть сообщение "Загрузка"
            $('#loading-message').hide();

            // получить ленты после полной загрузки страницы
            getFeeds("first");

            // убрать с некоторой задержкой сообщение о применении настроек, если оно есть
            setTimeout(function () {
                $('.alert-success').first().slideUp();
            }, 5000);
        });

        // флаг уже выполненной загрузки лент
        var feedsAreLoaded = false;

        // запрос получения выбранных пользователем лент
        // type: first - первичная загрузка, period - обновление
        function getFeeds(type) {
            // перед началом загрузки показать пользователю
            // сообщение "Загрузка..." или "Обновление..."
            if (type == "first") {
                $('#loading-message').text("Загрузка...");
            }
            else {
                $('#loading-message').text("Обновление...");
            }

            $('#loading-message').slideDown();

            // выполнить запрос на получение RSS-лент
            $.ajax({
                type: 'GET',
                url: '@Url.Action("RssFeeds")',
                success: function (data) {
                    // убрать сообщение "Загрузка..."
                    $('#loading-message').slideUp();
                    // отобразить на странице полученные ленты
                    $('.rss-feed').replaceWith(data);
                    // переключить флаг
                    feedsAreLoaded = true;
                },
                error: function () {
                    $('#loading-message').slideUp();
                }
            });
        }

        // периодическое обновление ленты
        $(function updater() {
            // функция будет срабатывать, только если была успешно загружена модель
            if (@updateTime > 0) {
                // кроме того, ленты также должны быть уже успешно загружены
                if (feedsAreLoaded == true) {
                    // выполнить запрос для получения RSS-ленты
                    getFeeds("period");
                    // после выполнения запроса установить таймер
                    // на повторное обновление лент
                    setTimeout(updater, @updateTime);
                }
                // если ленты ещё не загружены, попытаться выполнить обновление
                // через некоторый период снова
                else {
                    setTimeout(updater, @updateTime);
                }
            }
        });

        // добавление новой ленты
        $('#settings-feeds').on('click', '.add-feed', function () {
            // получить уже существующее поле для копирования
            var feedFieldTemplate = $('.feed-field:last');

            // добавить копию
            $(feedFieldTemplate).clone().appendTo('#settings-feeds').find("input[type='text']").val("");

            // переместить кнопку добавления в конец
            $(this).appendTo('#settings-feeds');
        });

        // удаление выбранной ленты
        $('#settings-feeds').on('click', '.remove-feed', function () {
            // проверить, сколько осталось полей для ввода ссылок ленты
            var amountLeft = $('.feed-field').length;

            // удалять, только если останется ещё хотя бы одно поле
            if (amountLeft > 1) {
                // получить поле с выбранной лентой
                var parentDiv = $(this).closest('.feed-field');
                // удалить его
                parentDiv.remove();
            }
            // в противном случае просто очистить
            else {
                $(this).closest('.feed-field').find("input[type='text']").val("");
            }
        });
    </script>
}