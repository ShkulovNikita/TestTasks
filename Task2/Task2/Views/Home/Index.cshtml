@using Task2.ViewModels;
@using Task2.HtmlHelpers;

@model FeedViewModel;

@{
    ViewData["Title"] = "RSS-фидер";

    // сообщения со стороны сервера
    string success = null;
    if (TempData["Success"] != null)
        success = TempData["Success"].ToString();

    string error = null;
    if (TempData["Error"] != null)
        error = TempData["Error"].ToString();

    // получить частоту обновления из модели, если есть
    int updateTime = -1;
    if (Model != null)
        updateTime = Model.UpdateTime;
}

<div class="row">
    @if (Model != null)
    {
        <!--Блок ленты-->
        <div class="col-8">
            <!--Блок сообщений-->
            @Html.CheckError(error)
            @Html.CheckSuccess(success)

            <!--Форма выбора ленты-->
            @using (Html.BeginForm("SetFeed", "Home", FormMethod.Get))
            {
                <label for="feed">Выберите ленту:</label>
                <select id="chosen-feed" name="feed">
                    <option value="0">----------</option>
                    @for (int i = 0; i < Model.Feeds.Count; i++)
                    {
                        <option value="@(i + 1)">@Model.Feeds[i]</option>
                    }
                </select>
            }

            <!--Лента-->
            <div class="rss-feed"></div>
        </div>
        <!--Блок настроек-->
        <div class="col-4">
            @using (Html.BeginForm("UpdateSettings", "Home", FormMethod.Post))
            {
                @foreach (string feed in Model.Feeds)
                {
                    <input type="text" name="feedLink" value="@feed" class="feed-link" />
                }
                <input type="number" name="updateTime" value="@Model.UpdateTime" />
                <input type="submit" class="btn btn-primary" value="Сохранить" />
            }
        </div>
    }
    else
    {
        <!--Вывести ошибку, из-за которой не удалось загрузить страницу-->
        <div class="col-12">
            @Html.CheckError(error)
        </div>
    }
</div>

@section scripts {
    <script type="text/javascript">
        // флаг, указывающий, выбрал ли уже пользователь ленту
        var feedIsChosen = false;

        // выбор ленты из выпадающего списка
        $(function () {
            $('#chosen-feed').change(function () {
                // получение выбранной ленты
                var chosenFeed = $('#chosen-feed').val() - 1;

                // указать, что пользователем была выбрана некоторая лента
                if (chosenFeed != -1)
                    feedIsChosen = true;
                else
                    feedIsChosen = false;

                if (feedIsChosen) {
                    // выполнить запрос для получения RSS-ленты
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("ChosenFeed")?feed=' + chosenFeed,
                        success: function (data) {
                            $('.rss-feed').replaceWith(data);
                        }
                    });
                }
            });
        })

        // периодическое обновление ленты
        $(function updater() {
            // функция будет срабатывать, только если была успешно загружена модель
            if (@updateTime > 0) {
                if (feedIsChosen == true) {
                    // получение выбранной ленты
                    var chosenFeed = $('#chosen-feed').val() - 1;

                    if (feedIsChosen) {
                        // выполнить запрос для получения RSS-ленты
                        // и установить период обновления для повторного запроса
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("ChosenFeed")?feed=' + chosenFeed,
                            success: function (data) {
                                $('.rss-feed').replaceWith(data);
                            },
                            complete: function () {
                                console.log('done2');
                                setTimeout(updater, @updateTime);
                            }
                        });
                    }
                }
                else {
                    console.log('done3');
                    setTimeout(updater, @updateTime);
                }
            }
        });

    </script>
}